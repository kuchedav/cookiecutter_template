[tool.mypy]
files = "src/{{ cookiecutter.repo_name }}"
ignore_missing_imports = true
python_version = "^3.11"

[tool.pytest.ini_options]
testpaths = [
  "tests",
]

[tool.coverage.run]
source_pkgs = [
  "{{ cookiecutter.repo_name }}",
]

########################################################################################
# POETRY                                                                               #
########################################################################################
[tool.poetry]
name = "{{ cookiecutter.repo_name }}"
{% if cookiecutter.author_email is defined %}
authors = ["{{ cookiecutter.author_name }}"]
{% else %}
authors = ["{{ cookiecutter.author_name }}"]
email = ["{{ cookiecutter.author_email }}"]
{% endif %}

description = "some useful functions for myself"
version = "0.0.0"

repository = "https://github.com/kuchedav/{{ cookiecutter.repo_name }}"

# README file(s) are used as the package description
readme = ["README.md", "LICENSE"]

# Keywords (translated to tags on the package index)
keywords = ["packaging", "poetry"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
# Compatible Python versions
python = "^3.11"

wheel = "^0.40.0"
coverage = "^7.2.7"
flake8 = "^6.0.0"
tox = "^4.6.4"
pre-commit-hooks = "^4.4.0"
pre-commit = "^3.3.3"
reorder-python-imports = "^3.10.0"
mypy = "^1.4.1"
twine = "^4.0.2"
build = "^0.10.0"
ruff = "^0.0.278"
black = "^23.7.0"

[tool.poetry.group.test.dependencies]
pytest = "^6.0.0"
